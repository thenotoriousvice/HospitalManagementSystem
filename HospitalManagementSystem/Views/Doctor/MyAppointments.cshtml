@using HospitalManagementSystem.Repository.Models
@using HospitalManagementSystem.ViewModels
@model IEnumerable<HospitalManagementSystem.ViewModels.DoctorAppointmentViewModel>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@{
    ViewData["Title"] = "My Scheduled Appointments";
}

<h1>My Scheduled Appointments</h1>

@if (TempData["Message"] != null)
{
    <div class="alert alert-info">@TempData["Message"]</div>
}

@if (!Model.Any())
{
    <p>No appointments found for your profile.</p>
}
else
{
    <table class="table table-striped table-bordered mt-3">
        <thead class="thead-dark">
            <tr>
                <th>Patient Name</th>
                <th>Patient Email</th>
                <th>Patient Phone</th>
                <th>Appointment Date</th>
                <th>Time</th>
                <th>Department</th>
                <th>Reason</th>
                <th>Status</th>
                <th>Bill Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model) // 'item' is now DoctorAppointmentViewModel
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Appointment.Patient.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Appointment.Patient.Email)</td>
                    <td>@Html.DisplayFor(modelItem => item.Appointment.Patient.PhoneNumber)</td>
                    <td>@Html.DisplayFor(modelItem => item.Appointment.AppointmentDate)</td>
                    <td>
                        @(item.Appointment.AppointmentTime.HasValue // --- CHANGED: access through item.Appointment ---
                                ? new DateTime().Add(item.Appointment.AppointmentTime.Value).ToString("hh:mm tt") // --- CHANGED: access through item.Appointment ---
                                : "Not Set")
                    </td>
                    <td>@(item.Appointment.Department?.Name ?? "N/A")</td> @* --- CHANGED: access through item.Appointment --- *@
                    <td>@Html.DisplayFor(modelItem => item.Appointment.Reason)</td> @* --- CHANGED: access through item.Appointment --- *@
                    <td>
                        @* --- MODIFICATION 1: Update Appointment Status Display Logic --- *@
                        @switch (item.Appointment.Status) // --- CHANGED: access through item.Appointment ---
                        {
                            case AppointmentStatus.Pending:
                                <span class="badge bg-warning text-dark">Pending</span>
                                break;
                            case AppointmentStatus.Approved:
                                <span class="badge bg-success">Approved</span>
                                break;
                            case AppointmentStatus.Rejected:
                                <span class="badge bg-danger">Rejected</span>
                                break;
                            case AppointmentStatus.Cancelled:
                                <span class="badge bg-secondary">Cancelled</span>
                                break;
                            case AppointmentStatus.Completed:
                                <span class="badge bg-info">Completed</span>
                                break;
                            case AppointmentStatus.PaymentPending:
                                <span class="badge bg-primary">Payment Pending</span>
                                break;
                            case AppointmentStatus.PaymentCompleted:
                                <span class="badge bg-success">Payment Completed</span>
                                break;
                            default:
                                <span>@item.Appointment.Status</span> @* --- CHANGED: access through item.Appointment --- *@
                                break;
                        }
                    </td>
                    <td>
                        @* --- NEW CELL FOR BILL STATUS --- *@
                        @if (item.Bill != null) // --- CHANGED: access through item.Bill ---
                        {
                            <span class="badge @(item.Bill.Status == HospitalManagementSystem.Repository.Models.BillStatus.PAID ? "bg-success" : "bg-warning")">
                                @item.Bill.Status.ToString().Replace("_", " ") 
                            </span>
                        }
                        else
                        {
                            <span>N/A</span> 
                        }
                    </td>
                    <td>
                        @* Logic for Doctors to Approve/Reject/Cancel/Complete/Upload Bill appointments from this view *@
                        @if (item.Appointment.Status == AppointmentStatus.Pending) // --- CHANGED: access through item.Appointment ---
                        {
                            <form asp-controller="Doctor" asp-action="Approve" method="post" class="d-inline">
                                <input type="hidden" name="id" value="@item.Appointment.Id" /> 
                                <div class="d-flex align-items-center mb-2">
                                    <input type="time" name="approvedTimeString" class="form-control me-2" style="width: auto;" required />
                                    <button type="submit" class="btn btn-success btn-sm" onclick="return confirm('Are you sure you want to approve this appointment and set this time?');">Approve</button>
                                </div>
                            </form>
                            <form asp-controller="Doctor" asp-action="Reject" method="post" class="d-inline me-2">
                                <input type="hidden" name="id" value="@item.Appointment.Id" /> 
                                <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to reject this appointment?');">Reject</button>
                            </form>
                            <form asp-controller="Doctor" asp-action="Cancel" method="post" class="d-inline mt-2">
                                <input type="hidden" name="id" value="@item.Appointment.Id" /> 
                                <button type="submit" class="btn btn-warning btn-sm" onclick="return confirm('Are you sure you want to cancel this appointment?');">Cancel</button>
                            </form>
                        }
                        else if (item.Appointment.Status == AppointmentStatus.Approved) // --- CHANGED: access through item.Appointment ---
                        {
                            @* --- MODIFICATION 2a: Add Complete Appointment button for Approved Appointments --- *@
                            <form asp-controller="Doctor" asp-action="Complete" method="post" class="d-inline me-2">
                                <input type="hidden" name="id" value="@item.Appointment.Id" /> 
                                <button type="submit" class="btn btn-success btn-sm" onclick="return confirm('Are you sure you want to mark this appointment as Completed?');">Complete</button>
                            </form>
                            <form asp-controller="Doctor" asp-action="Cancel" method="post" class="d-inline mt-2">
                                <input type="hidden" name="id" value="@item.Appointment.Id" /> 
                                <button type="submit" class="btn btn-warning btn-sm" onclick="return confirm('Are you sure you want to cancel this appointment?');">Cancel</button>
                            </form>
                        }
                        @* --- MODIFICATION 2b: Add "Upload Bill" button for Completed and Payment Pending Appointments --- *@
                        else if (item.Appointment.Status == AppointmentStatus.Completed || item.Appointment.Status == AppointmentStatus.PaymentPending) // --- CHANGED: access through item.Appointment ---
                        {
                            <a asp-controller="Billing" asp-action="Index" asp-route-patientId="@item.Appointment.Patient.PatientId" asp-route-appointmentId="@item.Appointment.Id" class="btn btn-primary btn-sm">
                                <i class="bi bi-receipt"></i> Upload/View Bill
                            </a>
                        }
                        else if (item.Appointment.Status == AppointmentStatus.Cancelled || item.Appointment.Status == AppointmentStatus.Rejected || item.Appointment.Status == AppointmentStatus.PaymentCompleted) // --- CHANGED: access through item.Appointment ---
                        {
                            @* Display a dash or current status for completed/cancelled/rejected/payment completed appointments where no further actions are typically needed by doctor *@
                            <span>-</span>
                        }
                        @* Add other specific actions for other statuses if needed *@
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}